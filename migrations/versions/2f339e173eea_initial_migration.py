"""Initial migration

Revision ID: 2f339e173eea
Revises: 
Create Date: 2024-12-05 01:46:31.646388

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '2f339e173eea'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.drop_index('idx_books_isbn')
        batch_op.drop_column('created_at')
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('borrow_records', schema=None) as batch_op:
        batch_op.alter_column('borrow_date',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('due_date',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.alter_column('return_date',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index('idx_borrow_status')
        batch_op.drop_constraint('borrow_records_ibfk_1', type_='foreignkey')
        batch_op.drop_constraint('borrow_records_ibfk_2', type_='foreignkey')
        batch_op.create_foreign_key(None, 'books', ['book_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('created_at')
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('max_borrow_limit', sa.Integer(), nullable=False))
        batch_op.alter_column('first_name',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.drop_index('idx_users_email')
        batch_op.drop_column('phone')
        batch_op.drop_column('created_at')
        batch_op.drop_column('updated_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('phone', mysql.VARCHAR(length=20), nullable=True))
        batch_op.create_index('idx_users_email', ['email'], unique=False)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('max_borrow_limit')

    with op.batch_alter_table('borrow_records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('borrow_records_ibfk_2', 'users', ['user_id'], ['id'], ondelete='RESTRICT')
        batch_op.create_foreign_key('borrow_records_ibfk_1', 'books', ['book_id'], ['id'], ondelete='RESTRICT')
        batch_op.create_index('idx_borrow_status', ['status'], unique=False)
        batch_op.alter_column('return_date',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('due_date',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=False)
        batch_op.alter_column('borrow_date',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=True))
        batch_op.add_column(sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True))
        batch_op.create_index('idx_books_isbn', ['isbn'], unique=False)

    # ### end Alembic commands ###
